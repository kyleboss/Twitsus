$(document).ready(function() {

  window.onbeforeunload = function() { kill_clients() };
  var is_past_refactory_period = true
  var map = ""
  var faye = new Faye.Client('http://fayebulous.herokuapp.com/faye');
  var infoWindow = new google.maps.InfoWindow({ maxWidth: 200, disableAutoPan: true });
  var addressField = document.getElementById('search_address');
  var geocoder = new google.maps.Geocoder();
  faye.subscribe("/faye/" + currentSession, function(response) {
    var tweet = response.text
    tweet.language = response.language.name
    var marker = new_marker(tweet)
    var contentString = tweet.text

    update_info_window(marker)
    
    google.maps.event.addListener(marker, 'click', function () { marker = marker_clicked(this) });
  });

  document.getElementById("search_address").addEventListener("keydown", function(e) {
      if (submit_button_pressed(e)) { search(); }
    }, false);

  function initialize() {
    var mapOptions = { zoom: 9, mapTypeId:  google.maps.MapTypeId.HYBRID };

    map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

    google.maps.event.addListener(map,"idle",function() { change_bounds() });
    set_center();

  }

  function set_center() {
    // Try W3C Geolocation (Preferred)
    if(geolocation_supported) {
      browserSupportFlag = true;
      navigator.geolocation.getCurrentPosition(function(position) {
        initialLocation = new google.maps.LatLng( position.coords.latitude,
                                                  position.coords.longitude);
        map.setCenter(initialLocation);
      }, function() { handleNoGeolocation(browserSupportFlag) });
    }
    // Browser doesn't support Geolocation
    else {
      browserSupportFlag = false;
      handleNoGeolocation(browserSupportFlag);
    }
  }

  function valid_zoom() {
    return map.getZoom() >= 9;
  }

  function geolocation_supported() {
    return navigator.geolocation
  }

  function handleNoGeolocation(errorFlag) {
    san_francisco = new google.maps.LatLng(37.7833, -122.4167)
    map.setCenter(san_francisco);
  }

  function new_marker(tweet) {
    console.log(tweet)
    var tweet_coords      = {lat: tweet.lat, lng:  tweet.lng}
    var language          = tweet.language
    var bubble_content    = "<b>" + language + "</b><p>" + tweet.text + "</p>"
    var marker_icon       = determine_flag(language)
    var new_position      = new google.maps.LatLng(tweet_coords["lat"], tweet_coords["lng"])
    var new_status_window = new google.maps.InfoWindow({ maxWidth: 200, disableAutoPan: true });
    new_status_window.setContent(bubble_content)

    return new google.maps.Marker({ position:     new_position,
                                    map:          map,
                                    animation:    google.maps.Animation.DROP,
                                    title:        language,
                                    content:      bubble_content,
                                    icon:         marker_icon,
                                    statusWindow: new_status_window});
  }

  function update_info_window(marker) {
    infoWindow.currMarker = marker
    infoWindow.setContent(marker.content)
    infoWindow.open(map, marker);
  }

  function determine_flag(language) {
      switch (language) {
      // case "ENGLISH":
      //   return '/assets/english_marker.png'
      // case "SPANISH":
      //   return '/assets/spanish_marker.png'
      // case "PORTUGUSE":
      //   return '/assets/portuguese_marker.png'
      default:
        return'/assets/english_marker.png'
    }
  }

  function marker_clicked(marker) {
    if (infoWindow.currMarker === marker) {
      infoWindow.currMarker = ""
      infoWindow.close(map, marker)
      marker.is_open = false;
    } else if (!marker.is_open) {
      marker.statusWindow.open(map, marker);
      marker.is_open = true;
    } else {
      marker.statusWindow.close(map, marker)
      marker.is_open = false;
    }
  }

  function kill_clients() {
    $.ajax({  async:  false,
              url:    "/homepage/kill_clients",
              type:   "post" });
  }

  function change_bounds() {
    var is_valid_zoom   = valid_zoom()
    var bounds          = get_bounds();
    if (is_past_refactory_period) {
      $.post("/homepage/change_bounds", {sw_lng:          bounds["sw_lng"], 
                                        sw_lat:           bounds["sw_lat"], 
                                        ne_lng:           bounds["ne_lng"], 
                                        ne_lat:           bounds["ne_lat"],
                                        currentSession:   currentSession,
                                        is_valid_zoom:    is_valid_zoom});
      is_past_refactory_period = false
      setTimeout(function() { is_past_refactory_period = true; }, 1000);
    }
  }

  function get_bounds() {
    var map_bounds  = map.getBounds()
    var sw_coords   = map_bounds.getSouthWest()
    var ne_coords   = map_bounds.getNorthEast()
    return {sw_lng: sw_coords.lng(), 
            sw_lat: sw_coords.lat(), 
            ne_lng: ne_coords.lng(), 
            ne_lat: ne_coords.lat()};
  }

  function search() {
    bounds = get_bounds();
    sw_coords = new google.maps.LatLng(bounds["sw_lat"], bounds["sw_lng"])
    ne_coords = new google.maps.LatLng(bounds["ne_lat"], bounds["ne_lng"])
    lat_lng_bounds = new google.maps.LatLngBounds(sw_coords, ne_coords)
    geocoder.geocode({'address': addressField.value, 'bounds': lat_lng_bounds}, 
                      function(results, status) { redirect_post_search(results, status) });
  }

  function redirect_post_search(results, status) {
    if (status == google.maps.GeocoderStatus.OK) { 
      var loc = results[0].geometry.location;
      var new_loc = new google.maps.LatLng(loc.lat(), loc.lng())
      map.setCenter(new_loc);
    } else {
      alert("Not found: " + status); 
    } 
  }

  function submit_button_pressed(e) {
    return e.keyCode == 13
  }

  initialize();
});